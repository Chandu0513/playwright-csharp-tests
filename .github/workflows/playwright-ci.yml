name: .NET Playwright CI

on: 
  workflow_dispatch:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    - cron: '*/10 * * * *'  # Every 10 minutes

jobs:
  try-self-hosted:
    name: Try on Self-Hosted Runner
    runs-on: [self-hosted]
    timeout-minutes: 5     # Fail fast if runner is offline
    continue-on-error: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore dependencies
        run: dotnet restore
        shell: cmd

      - name: Build project
        run: dotnet build --no-restore --configuration Release
        shell: cmd

      - name: Add .NET tools folder to PATH
        run: echo %USERPROFILE%\.dotnet\tools >> %GITHUB_PATH%
        shell: cmd

      - name: Install Playwright Browsers (automated)
        run: powershell -ExecutionPolicy Bypass -File bin\Release\net8.0\playwright.ps1 install
        shell: cmd

      - name: Run tests
        continue-on-error: true  
        run: dotnet test --no-build --configuration Release --logger "trx"
        shell: cmd
        env: 
          HEADLESS: false

      - name: Deploy to local folder
        if: success()
        run: powershell -ExecutionPolicy Bypass -File deploy.ps1
        shell: cmd


  fallback-ubuntu:
    name: Fallback on Ubuntu VM
    runs-on: ubuntu-latest
    needs: try-self-hosted
    if: ${{ needs.try-self-hosted.result != 'success' }}  # Only runs if self-hosted failed or was offline

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --no-restore --configuration Release

      - name: Install Playwright Browsers
        run: |
          pwsh bin/Release/net8.0/playwright.ps1 install

      - name: Run tests
        run: dotnet test --no-build --configuration Release --logger "trx"
        env:
          HEADLESS: false

      - name: Zip test output
        run: zip -r test_output.zip .

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: test-output
          path: test_output.zip
